[{"content":"git 常用命令 git add . (添加文件到暂存区 git commit (将暂存区内容添加到仓库中 提示可疑仓库权时 git config \u0026ndash;global \u0026ndash;add safe.directory /path/to/dir\ngit push (上传到远程仓库 git 凭据存储（gpt 🐮） 避免每次都要手动输入用户名和token来提交\n使用 git-credential-store 存储 token 1 git config --global credential.helper store 运行以下命令将凭据保存到文件中\n1 git push https://github.com/username/repository.git 当系统提示输入用户名和密码时，使用以下格式输入：\n用户名：输入你的 GitHub 用户名\r密码：输入你的个人访问令牌（PAT）\r这样，Git 会将凭据保存到本地文件中，以后你就不需要每次都输入 token 了。\n这里发现 tab 可以给文本套个框 😄\n提交到远程仓库 确保远程仓库存在且不为空\n1 2 3 4 git remote add origin https://github.com/username/repo git branch -m main ... git push hugo 自动部署 进入分叉项目的“设置/页面”，将“源”设置为“GitHub Actions”。\n","permalink":"//192.168.1.17:1313/blogs/git--github/","summary":"关于 git 以及 github 的知识","title":"git \u0026 github"},{"content":"字体设置 1 setfont ter-132n # 暂时设置 /etc/vconsole.conf的FONT变量永久性设置字体\n1 2 ... FONT=ter-132n 安装以下字体：\n1 pacman -S ttf-jetbrains-mono terminus-font ttf-font-awesome 联网 1 2 3 4 5 iwctl device list station wlan0 scan station wlan0 get-networks station wlan0 connect \u0026lt;要连接的WiFi\u0026gt; 更新系统时间 1 timedatectl set-ntp true 分区 1 2 3 4 lsblk # 查看分区 cfdisk # 创建分区 mkfs.ext4 /dev/根分区 mkfs.fat -F 32 /dev/EFI分区 1 2 3 mount /dev/根分区 /mnt # 挂载根分区 mkdir /mnt/boot # 创建启动分区 mount /dev/EFI分区 /mnt/boot # 再挂载（lsblk查看windows的EFI分区号） 换源 1 2 nano /etc/pacman.d/mirrorlist pacman -S archlinux-keyring 安装 1 pacstrap /mnt sudo neovim terminus-font base linux linux-firmware # 基本安装 可选内核 1 2 genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab # 生成fstab文件 cat /mnt/etc/fstab # 检查一下 配置系统 1 2 3 arch-chroot /mnt # Change root 到新安装的系统 ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime # 设置时区 hwclock --systohc # 生成 /etc/adjtime 本地化 编辑 /etc/locale.gen，然后取消掉 en_US.UTF-8 UTF-8 和其他需要的区域设置前的注释，接着：\n1 locale-gen 然后创建/etc/locale.conf文件，并编辑设定 LANG 变量：\n1 LANG=en_US.UTF-8 网络配置 1 2 3 pacman -S networkmanager systemctl enable NetworkManager.service # nmtui 设置 Root 密码 1 passwd Grub 克隆分区后修复时，先删除 /boot 目录后运行以下命令！\n1 2 3 pacman -S grub efibootmgr # 安装 grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub # 安装到 grub-mkconfig -o /boot/grub/grub.cfg # 生成配置文件 重启 1 2 3 exit # 退出chroot环境 umount -R /mnt # 卸载被挂载分区 reboot 用户管理 1 2 3 useradd -m -G wheel ageha passwd ageha EDITOR=nvim visudo # 删除含 %wheel 行注释 ","permalink":"//192.168.1.17:1313/archlinux/archlinux-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/","summary":"简洁明了的 archlinux 安装文档","title":"archlinux 安装文档"}]